# Multi-stage build for minimal attack surface
FROM python:3.12-slim AS builder

# Install build dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    curl \
    gcc \
    && rm -rf /var/lib/apt/lists/*

# Create virtual environment
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Download Ollama binary
RUN curl -fsSL "https://github.com/ollama/ollama/releases/download/v0.3.12/ollama-linux-amd64" -o /opt/venv/bin/ollama && \
    chmod +x /opt/venv/bin/ollama

# Production stage - minimal image
FROM gcr.io/distroless/python3-debian12:latest

# Copy virtual environment from builder
COPY --from=builder /opt/venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Copy application
WORKDIR /app
COPY craftx.py .

# Expose port
EXPOSE 8000

# Use distroless non-root user
USER nonroot:nonroot

# Simple CMD without shell
CMD ["python", "-m", "uvicorn", "craftx:app", "--host", "0.0.0.0", "--port", "8000"]
